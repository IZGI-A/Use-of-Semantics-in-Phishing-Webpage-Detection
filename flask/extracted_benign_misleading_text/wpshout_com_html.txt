In-Depth WordPress Tutorials for Developers
Welcome to WPShout, a website about WordPress development.
Below, you'll find some of our favorite WordPress development tutorials, news, and resources.
Whether you're just getting started or need a specific WordPress coding tutorial, you'll find we tackle technical topics in an easy-to-understand, friendly way.
You'll find some of our favorite WordPress tutorials below, and new posts most weekdays. Oh, and we're Fred and David—we're the WordPress developers who run this site.
P.S. If you haven't already subscribed for our excellent weekly newsletter, then now's the time.
Our "Start Here" Guides
These core WordPress development tutorials will get you started on the right foot.
Recently Published
Check out our most recently published WordPress development tutorials, thoughts and advice on working as a WordPress developer, and WordPress development news.
Why You Should Use CSS Grid
Other Recent Articles
Learn WordPress Development: The Basic Course
PHP Foreach: All You Need to Know
Beaver Builder Theme Review: Who Should Use It, and Why
WP Cron in Practice: wp_schedule_event Examples + More
Links and Quick Guides
Quick Guide: See Your WordPress Scheduled Tasks
Sometimes, a developer will want to know why a WordPress site gets slow at a particular time, why their WP-Cron scheduled task isn't working, or want to force one to run at off time. For all of these problems, the WP Crontrol plugin is the perfect tool. It's a WordPress plugin to quickly debug your WP-Cron issues, all in one…
Smarter Handling of Large Images in WP 5.3
I was pleasantly surprised to learn about this WordPress 5.3 feature which in highlighted by Justin Ahinon on Make WordPress Core. The issue it’s meant to solve is an uncompressed 12 megapixel fresh-from-the-phone type of photo being comically too large for your WordPress site.
In my playing with the WordPress media APIs I’ve never loved, but none of this looks like it’d cause obvious probelms:
When a new image is uploaded, WordPress will detect if it is a “big” image by checking if its height or its width is above a
big_image threshold. The default threshold value is 2560px, filterable with the new
big_image_size_thresholdfilter.
If an image height or width is above this threshold, it will be scaled down, with the threshold being used as max-height and max-width value. The scaled-down image will be used as the largest available size.
In this case, the original image file is stored in the uploads directory and its name is stored in another array key in the image meta array:
original_image. To be able to always get the path to an originally uploaded image a new function
wp_get_original_image_path()was introduced.
Changing in PHP 7.4
Now that WordPress is actively pushing the community and sites that run it toward more modern versions of PHP, it’s extra important to follow language changes. That’s where this summary of the most consequential features of the forthcoming PHP 7.4 for WordPress development form Jonathan Desrosiers comes in. He does a great job of quickly and approachably explaining all the features and changes that the language will bring.
I was happy to learn that none of the changes really affect code I typically write, but this change was the most striking to me. Mostly because it highlighted a weird ambiguity in the PHP API I wasn’t aware of:
Specific Parameter Order Requirements For implode()
The
implode()function accepts two parameters,
$glueand
$pieces. For historical reasons,
implode()has accepted these parameters in any order, though it has been a recommendation that the documented order of
implode( $glue, $pieces )be used.
Starting in PHP 7.4, tolerance for passing the parameters in reverse order is deprecated and will be completely removed in PHP 8.0. Calling
implode( $pieces, $glue )in PHP 7.4 will trigger a deprecated notice.
Quick Guide: Making Your First WordPress Shortcode
This video and text Quick Guide covers how to create a WordPress shortcode. If you want to learn the basics of WordPress shortcode creation, or if you want a refresher on shortcodes, you're in the right place. How WordPress Shortcodes Work Shortcodes let you run any kind of PHP code, and then print the result into your post content wherever…
Quick Guide: Schedule Design Changes in WordPress
One of my favorite recent changes to WordPress is the ease of scheduling design changes. I admit that while I find this feature very cool, I don't use it a lot. But if you're the kind of person who like to mark holidays, sales, or something else with customizations to look of your WordPress site, you should really know about…
“Open Source and Power” with Matt Mullenweg and DHH
Almost everyone who reads us knows Matt Mullenweg, the leader of Automattic/Jetpack, and the WordPress project. And you may know David Heinemeier Hansson (DHH) from his leadership of the Ruby on Rails project, or from their app Basecamp.
And this podcast episode, from Basecamp’s Rework podcast, where Matt and DHH discuss control and power of open source. The discussion was catalyzed by Automattic’s recently announced round of funding from Salesforce.
I’m not sure there’s a single revelation in the podcast, if I’m honest. But it’s very interesting to hear two people whose work and values I respect a great deal (for different reasons) discuss anything together. Especially something as consequential as the consolidation of power under capitalism, what a Chrome (browser) based mono-culture mean to the open web, and what role they should plan in all of that. Give it a listen!
Coding Advice for Those Who Think They Suck at Code
Found from Ben in the MasterWP newsletter, I love this hilariously short bit of advice about how to be a better programmer. In it, Pete Shirley, who calls himself “a poor programmer” says it’s helped him as someone who thinking they’re in the bottom quartile of all programmers. I kind of doubt he really is, because the advice is way better that what a lot of “elite” programmers tell you about. And it’s very approachable.
Here’s his preamble
I am a poor programmer. Ask anyone who has worked on group projects with me.
But the key compensation is I am aware I am a poor programmer. I do not try to do anything fancy. I follow some heuristics that keep me productive IMO. I think these heuristics are in fact good for all programmers, but are essential for those of us in the bottom quartile.
Because I don’t want to spoil the whole list, I’ll just tell you that it’s 8 things and that it’ll take you under a minute to read.
Quick Guide: How to Change Your Permalink Settings
When you create a new page or post on your site, WordPress automatically creates a new entity called a "permalink" that directs to your new content. Since search engines use the URLs of your links as a factor to to determine your position in their rankings, making sure they're optimized to reflect your keywords is pretty important. In this post,…
Justin Tadlock Joins WP Tavern
Back in 2007, when I was just coming to terms with WordPress, Justin Tadlock was out at the forefront of what I understood WordPress to be. In the (gosh!) 12 years since, Justin’s stayed busy in the WordPress space, but also done some other things like share on his blog about his small farm.
On the whole, Justin is in my mind one of those people that belongs on a Rushmore of WordPress. He’s just always loomed large, has taught me a lot of what I know, and has always seemed humble and generous while doing it.
All of this is just to explain why I thought it interested and notable enough to share the fact that Justin has stepped into the shoes left behind by Jeff Chandler at WP Tavern. If you don’t follow it, the Tavern has been a prominent voice in WordPress for a long time. It has been bankrolled by Matt Mullenweg for the last (memory fails me, I looked it up) 6 years, and I’m really excited to see what comes next form Sarah Gooding and Justin over there.
Quick Guide: How to Properly Modify JavaScript Files in a Parent Theme
I recently needed to modify a JavaScript file in a WordPress parent theme. The script was doing almost what I wanted, but not quite, so I wanted to make minor changes. In your case, you might want to entirely override a parent theme JavaScript file in your child theme, or even deactivate a parent theme JavaScript file altogether. What Not to…
Keep reading about How to Properly Modify JavaScript Files in a Parent Theme →
Quick Guide: How to Migrate a WordPress Site with the Duplicator Plugin
WordPress has a lot of migration systems. We've had lots of good experiences with All-in-One WP Migration, some people swear by WP Migrate DB Pro, and others are partial to WP-CLI's terminal-based systems. On top of these options, I've recently found a plugin I really like called Duplicator that approaches WordPress migrations in a unique way. Here's a guide on…
Keep reading about How to Migrate a WordPress Site with the Duplicator Plugin →
Install WordPress with a Managed Database on Digital Ocean
Digital Ocean, a popular VPS hosting provider, recently announced a hosted-MySQL platform. The reasons you may want to do use this (vs putting the MySQL instance on the same server as your WordPress wed server) are a little more subtle than I want to get into here, but suffice it to say you’d get better scalability but a possibly more complex setup. For that reason, I’m linking to this tutorial on the topic from Mark Drake.
I’ve got an interest in using this for some syncing of my various development environments. But enough about me.
This tutorial does a few great things, but the most interesting one is that setting up of the database. In many ways, the rest is a fairly common WordPress install guide. The use of Apache (vs Nginx) is one of the aspects of that stuff we could have long debates about, but again I’ll defer that discussion to other venues and opportunities.
Quick Guide: WordPress Facebook Widget: Add FB to Your Sidebar
Many people and businesses are proud of their Facebook page. They want to be able to market all the great reviews, posts, etc that they've earn on Facebook. WordPress does many things for you, so surely it has a pretty easy way to get a Facebook widget. And you looked and it wasn't there. So what do you do? How…
Keep reading about WordPress Facebook Widget: Add FB to Your Sidebar →
Easier Lazy Loading (for Chrome)
So, Chome 76 (or later. But what version of Chrome am I running anyway?) is getting a feature that would have saved me at least a little work on a few client projects. That is, it’s making lazy-loading of images and iframes as easy as:
<img src="image.png" loading="lazy" alt="…" width="200" height="200">
<iframe src="https://example.com" loading="lazy"></iframe>
What’s lazy loading? As you might have guessed from the name alone, it’s when a browser that’s not currently showing an image (in the “viewport”, or part of a page it’s showing) doesn’t actually download that image. This means that if you’re on a slow connection, you’ll load each image as you need to see it, rather than it just seeming to take forever to load the page initially. It’s generally regarded as a best practice, but it’s never been easy.
Previously, to add lazy loading of images to a page you’d have to go through and change out the page markup and then load in the
img attributes later with some JavaScript. If (or when) this Chrome behavior becomes a standard used on all major browsers, then you’ll just have to add this
loading="lazy" line to each image (or iframe) you want lazy loaded.
The “if” I said above it my one source of hesitation here. I don’t know a lot about what the standards bodies internal functioning is, or if this is the standard way that a web standard eventually gets approved. But my (unfounded) nervousness about Google making the HTML that supports them (vs the open web) is the only reason this is anything but unalloyed *great* news to me.
Managing Multiple Sites: WordPress Multisite vs Separate Installations
I was recently working on a client project where I was faced with the question: should we have one WordPress multisite installation, or many “stand alone” WordPress sites? I gave the correct and scapegoat-y answer: “It depends.” And I was right, but if (like me) you weren’t really aware of the intricacies of that trade-off, I recommend reading this little article from Andy over at Beaver Builder.
In short, a lot of people fear WordPress multisite, and with reason. It’s a different way of using WordPress. But it’s a good one for specific scenarios. For example, Multisite is great if you don’t want to update plugins across dozens of sites. But, you also make it much harder for one site owner to choose to use a different plugin for some common functionality.
Anyway, enough of my yammering. Read more from this article. Here’s my favorite bit, on making the choice:
A WordPress Multisite network is a great solution for managing closely-related sites. But let’s be honest – very few of your projects are going to meet that criteria.
You’re probably dealing with multiple WordPress installations spread across at least a handful of different hosting providers. These sites might be running similar themes and plugins, but aside from that, they’re distinct – owned and operated by clients who aren’t associated with each other.
The upside to keeping these sites separated is that it lowers your risk as a site developer and administrator. You can tailor the setup of each site to suit the needs of the client and the needs of whatever hosting provider they’re using. If something goes wrong on one site, it won’t affect the performance of another site.
The downside is that this adds more overhead to your routines. Software updates, troubleshooting, user management, client reporting – these are all administrative duties that take time away from you working on bigger, more valuable tasks.
Signs of the Blogging Apocalypse: Automattic Buys Tumblr
The weirdest piece of email I’ve gotten all month was courtesy of Brian Krogsgard and the Post Status newsletter: Automattic (owner of WordPress.com, Jetpack, Akismet, WooCommerce…) has just bought blogging giant Tumblr.
Tumblr is a site that normal people have heard of, in a way they haven’t heard of WordPress.com, Jetpack, or maybe even WordPress itself. It’s the site whose oddly difficult-to-follow threading format you’ll instantly recognize if you like internet memes. Most visibly, it’s also the site that banned adult content last year, a decision that was covered widely in the news media and has led to, for example, YouTube videos parodying its executives’ decision making that have garnered millions of views.
It turns out Tumblr was owned by Verizon, following a more than $1 billion 2013 acquisition by Yahoo! (now also owned by Verizon). Whether or not the decision on adult content was a mistake, Verizon certainly seems on board that it’s been horribly mismanaging the property, because its top priority is clearly just to get out of the business: it appears to have sold Tumblr to Automattic for $3 million. That’s an absolutely mind-bogglingly low number. $3 million is almost in the range of what a small business could scrape together. That’s Verizon’s asking price. To buy Tumblr.
I don’t know what likely happens from here, and how it changes WordPress’s future. One possible answer is, simply, “it may not change much.” Tumblr itself may be fatally wounded at this point, and as savvy as Matt and Automattic are in some ways, we don’t know if reversing the fortunes of a declining blogging platform is in their wheelhouse. Nor do I think that WordPress itself necessarily becomes massively better or more connected now that Tumblr is owned by the folks who own Jetpack. As with the WordPress Rest API a few years ago: the news feels big—but, big how?
I am also curious what adding Tumblr’s staff of 200 people will do to Automattic’s priorities. There’s a world in which the Tumblr acquisition becomes a costly distraction in terms of WordPress’s progress forward as a software project—not because Automattic runs WordPress, which it doesn’t, but because Matt’s priorities tend to still get done in the absence of a better-functioning governance model for the project.
More than anything, this does seem like a confirmation that we are in some sort of End Times event, at least in the blogging world. But for much higher-quality analysis than that, you should read Brian’s article.
Quick Guide: WordPress Profile Picture without Gravatar
I was recently working on setting up a site for a personal project and was surprised to discover that there was no place in the theme to add a custom picture for my user bio. I figured out what I wanted: to set my WordPress avatar without Gravatar. I'd rather not rely on a service like that if I don't…
Keep reading about WordPress Profile Picture without Gravatar →
An Advisory Board for WordPress
I like the direction that Josepha Haden is pushing WordPress. She’s making strides to put the whole project on an even better trajectory. Toward better collaboration, better effectiveness, more inclusive. It’s not the case that I (as a random person far from the core of most of the projects) know a lot about how it feels to people more involved, but I hope and see signs that those more-involved agree.
It is because of this that I’m cheered by the idea she presents in this proposal of forming an advisory board for WordPress. I think it’s important to balance enthusiasm for a board with the idea that boards and committees are both great at doing things, and great at causing ineffectiveness. But I’m staying optimistic. Part of making sure there’s an attitude and reality of collaboration will be grounded in there being real discussions and formal cross-boundary problem-solving. And making places for that collaboration to happen is a real and important prerequisite to it happening.
If you’re at all interested in this idea, I really encourage you to chime in on the discussion on the post itself. It seems like a reasonably vigorous and quite intelligent discussion. But it’s too currently busy for your voice to register.
(Discovered via the WP Tavern write-up from Sarah Gooding, which is itself quite good.)
Quick Guide: How to Change Your Default Category From “Uncategorized” in WordPress
In this text and video Quick Guide, we'll show you how to change your WordPress default category from "Uncategorized" to something custom! Why You'd Want to Change Your WordPress Default Category Categories are a type of default WordPress taxonomy that helps users organize their posts. You might have noticed that WordPress, by default, automatically categorizes your new posts as "Uncategorized."…
Keep reading about How to Change Your Default Category From “Uncategorized” in WordPress →
Quick Guide: Recover WordPress Password: Get a Password Reset Email
In this Quick Guide, we'll help you get a WordPress password reset email. With that email from your WordPress site, you should be able to recover your WordPress password. It's not a perfect system, but if you're unable to log into a WordPress site because you forgot your password, this should help immensely. If you have access to the email…
Keep reading about Recover WordPress Password: Get a Password Reset Email →